// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/service (interfaces: NamespaceService)

// Package service is a generated GoMock package.
package service

import (
	models "github.com/baetyl/baetyl-cloud/v2/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNamespaceService is a mock of NamespaceService interface
type MockNamespaceService struct {
	ctrl     *gomock.Controller
	recorder *MockNamespaceServiceMockRecorder
}

// MockNamespaceServiceMockRecorder is the mock recorder for MockNamespaceService
type MockNamespaceServiceMockRecorder struct {
	mock *MockNamespaceService
}

// NewMockNamespaceService creates a new mock instance
func NewMockNamespaceService(ctrl *gomock.Controller) *MockNamespaceService {
	mock := &MockNamespaceService{ctrl: ctrl}
	mock.recorder = &MockNamespaceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNamespaceService) EXPECT() *MockNamespaceServiceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockNamespaceService) Create(arg0 *models.Namespace) (*models.Namespace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*models.Namespace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockNamespaceServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNamespaceService)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockNamespaceService) Delete(arg0 *models.Namespace) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockNamespaceServiceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockNamespaceService)(nil).Delete), arg0)
}

// Get mocks base method
func (m *MockNamespaceService) Get(arg0 string) (*models.Namespace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*models.Namespace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockNamespaceServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNamespaceService)(nil).Get), arg0)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/service (interfaces: ObjectService)

// Package service is a generated GoMock package.
package service

import (
	models "github.com/baetyl/baetyl-cloud/v2/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockObjectService is a mock of ObjectService interface
type MockObjectService struct {
	ctrl     *gomock.Controller
	recorder *MockObjectServiceMockRecorder
}

// MockObjectServiceMockRecorder is the mock recorder for MockObjectService
type MockObjectServiceMockRecorder struct {
	mock *MockObjectService
}

// NewMockObjectService creates a new mock instance
func NewMockObjectService(ctrl *gomock.Controller) *MockObjectService {
	mock := &MockObjectService{ctrl: ctrl}
	mock.recorder = &MockObjectServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockObjectService) EXPECT() *MockObjectServiceMockRecorder {
	return m.recorder
}

// CreateInternalBucketIfNotExist mocks base method
func (m *MockObjectService) CreateInternalBucketIfNotExist(arg0, arg1, arg2, arg3 string) (*models.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInternalBucketIfNotExist", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*models.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInternalBucketIfNotExist indicates an expected call of CreateInternalBucketIfNotExist
func (mr *MockObjectServiceMockRecorder) CreateInternalBucketIfNotExist(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInternalBucketIfNotExist", reflect.TypeOf((*MockObjectService)(nil).CreateInternalBucketIfNotExist), arg0, arg1, arg2, arg3)
}

// GenExternalObjectURL mocks base method
func (m *MockObjectService) GenExternalObjectURL(arg0 models.ExternalObjectInfo, arg1, arg2, arg3 string) (*models.ObjectURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenExternalObjectURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*models.ObjectURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenExternalObjectURL indicates an expected call of GenExternalObjectURL
func (mr *MockObjectServiceMockRecorder) GenExternalObjectURL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenExternalObjectURL", reflect.TypeOf((*MockObjectService)(nil).GenExternalObjectURL), arg0, arg1, arg2, arg3)
}

// GenInternalObjectURL mocks base method
func (m *MockObjectService) GenInternalObjectURL(arg0, arg1, arg2, arg3 string) (*models.ObjectURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenInternalObjectURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*models.ObjectURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenInternalObjectURL indicates an expected call of GenInternalObjectURL
func (mr *MockObjectServiceMockRecorder) GenInternalObjectURL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenInternalObjectURL", reflect.TypeOf((*MockObjectService)(nil).GenInternalObjectURL), arg0, arg1, arg2, arg3)
}

// ListExternalBucketObjects mocks base method
func (m *MockObjectService) ListExternalBucketObjects(arg0 models.ExternalObjectInfo, arg1, arg2 string) (*models.ListObjectsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListExternalBucketObjects", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ListObjectsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListExternalBucketObjects indicates an expected call of ListExternalBucketObjects
func (mr *MockObjectServiceMockRecorder) ListExternalBucketObjects(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListExternalBucketObjects", reflect.TypeOf((*MockObjectService)(nil).ListExternalBucketObjects), arg0, arg1, arg2)
}

// ListExternalBuckets mocks base method
func (m *MockObjectService) ListExternalBuckets(arg0 models.ExternalObjectInfo, arg1 string) ([]models.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListExternalBuckets", arg0, arg1)
	ret0, _ := ret[0].([]models.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListExternalBuckets indicates an expected call of ListExternalBuckets
func (mr *MockObjectServiceMockRecorder) ListExternalBuckets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListExternalBuckets", reflect.TypeOf((*MockObjectService)(nil).ListExternalBuckets), arg0, arg1)
}

// ListInternalBucketObjects mocks base method
func (m *MockObjectService) ListInternalBucketObjects(arg0, arg1, arg2 string) (*models.ListObjectsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInternalBucketObjects", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ListObjectsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInternalBucketObjects indicates an expected call of ListInternalBucketObjects
func (mr *MockObjectServiceMockRecorder) ListInternalBucketObjects(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInternalBucketObjects", reflect.TypeOf((*MockObjectService)(nil).ListInternalBucketObjects), arg0, arg1, arg2)
}

// ListInternalBuckets mocks base method
func (m *MockObjectService) ListInternalBuckets(arg0, arg1 string) ([]models.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInternalBuckets", arg0, arg1)
	ret0, _ := ret[0].([]models.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInternalBuckets indicates an expected call of ListInternalBuckets
func (mr *MockObjectServiceMockRecorder) ListInternalBuckets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInternalBuckets", reflect.TypeOf((*MockObjectService)(nil).ListInternalBuckets), arg0, arg1)
}

// ListSources mocks base method
func (m *MockObjectService) ListSources() map[string]models.ObjectStorageSourceV2 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSources")
	ret0, _ := ret[0].(map[string]models.ObjectStorageSourceV2)
	return ret0
}

// ListSources indicates an expected call of ListSources
func (mr *MockObjectServiceMockRecorder) ListSources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSources", reflect.TypeOf((*MockObjectService)(nil).ListSources))
}

// PutInternalObjectFromURLIfNotExist mocks base method
func (m *MockObjectService) PutInternalObjectFromURLIfNotExist(arg0, arg1, arg2, arg3, arg4 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutInternalObjectFromURLIfNotExist", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutInternalObjectFromURLIfNotExist indicates an expected call of PutInternalObjectFromURLIfNotExist
func (mr *MockObjectServiceMockRecorder) PutInternalObjectFromURLIfNotExist(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutInternalObjectFromURLIfNotExist", reflect.TypeOf((*MockObjectService)(nil).PutInternalObjectFromURLIfNotExist), arg0, arg1, arg2, arg3, arg4)
}

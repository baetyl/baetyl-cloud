// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/cache.go

// Package plugin is a generated GoMock package.
package plugin

import (
	models "github.com/baetyl/baetyl-cloud/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCacheService is a mock of CacheService interface.
type MockCacheService struct {
	ctrl     *gomock.Controller
	recorder *MockCacheServiceMockRecorder
}

// MockCacheServiceMockRecorder is the mock recorder for MockCacheService.
type MockCacheServiceMockRecorder struct {
	mock *MockCacheService
}

// NewMockCacheService creates a new mock instance.
func NewMockCacheService(ctrl *gomock.Controller) *MockCacheService {
	mock := &MockCacheService{ctrl: ctrl}
	mock.recorder = &MockCacheServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheService) EXPECT() *MockCacheServiceMockRecorder {
	return m.recorder
}

// GetSystemConfig mocks base method.
func (m *MockCacheService) GetSystemConfig(key string) (*models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemConfig", key)
	ret0, _ := ret[0].(*models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemConfig indicates an expected call of GetSystemConfig.
func (mr *MockCacheServiceMockRecorder) GetSystemConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemConfig", reflect.TypeOf((*MockCacheService)(nil).GetSystemConfig), key)
}

// ListSystemConfig mocks base method.
func (m *MockCacheService) ListSystemConfig(page *models.Filter) (*models.ListView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSystemConfig", page)
	ret0, _ := ret[0].(*models.ListView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSystemConfig indicates an expected call of ListSystemConfig.
func (mr *MockCacheServiceMockRecorder) ListSystemConfig(page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSystemConfig", reflect.TypeOf((*MockCacheService)(nil).ListSystemConfig), page)
}

// CreateSystemConfig mocks base method.
func (m *MockCacheService) CreateSystemConfig(sysConfig *models.SystemConfig) (*models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSystemConfig", sysConfig)
	ret0, _ := ret[0].(*models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSystemConfig indicates an expected call of CreateSystemConfig.
func (mr *MockCacheServiceMockRecorder) CreateSystemConfig(sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSystemConfig", reflect.TypeOf((*MockCacheService)(nil).CreateSystemConfig), sysConfig)
}

// UpdateSystemConfig mocks base method.
func (m *MockCacheService) UpdateSystemConfig(sysConfig *models.SystemConfig) (*models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemConfig", sysConfig)
	ret0, _ := ret[0].(*models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSystemConfig indicates an expected call of UpdateSystemConfig.
func (mr *MockCacheServiceMockRecorder) UpdateSystemConfig(sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemConfig", reflect.TypeOf((*MockCacheService)(nil).UpdateSystemConfig), sysConfig)
}

// DeleteSystemConfig mocks base method.
func (m *MockCacheService) DeleteSystemConfig(key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSystemConfig", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSystemConfig indicates an expected call of DeleteSystemConfig.
func (mr *MockCacheServiceMockRecorder) DeleteSystemConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSystemConfig", reflect.TypeOf((*MockCacheService)(nil).DeleteSystemConfig), key)
}

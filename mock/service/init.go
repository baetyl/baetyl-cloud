// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/service (interfaces: InitService)

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInitService is a mock of InitService interface
type MockInitService struct {
	ctrl     *gomock.Controller
	recorder *MockInitServiceMockRecorder
}

// MockInitServiceMockRecorder is the mock recorder for MockInitService
type MockInitServiceMockRecorder struct {
	mock *MockInitService
}

// NewMockInitService creates a new mock instance
func NewMockInitService(ctrl *gomock.Controller) *MockInitService {
	mock := &MockInitService{ctrl: ctrl}
	mock.recorder = &MockInitServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInitService) EXPECT() *MockInitServiceMockRecorder {
	return m.recorder
}

// GenCmd mocks base method
func (m *MockInitService) GenCmd(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenCmd", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenCmd indicates an expected call of GenCmd
func (mr *MockInitServiceMockRecorder) GenCmd(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenCmd", reflect.TypeOf((*MockInitService)(nil).GenCmd), arg0, arg1, arg2)
}

// GetResource mocks base method
func (m *MockInitService) GetResource(arg0, arg1, arg2 string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0, arg1, arg2)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource
func (mr *MockInitServiceMockRecorder) GetResource(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockInitService)(nil).GetResource), arg0, arg1, arg2)
}

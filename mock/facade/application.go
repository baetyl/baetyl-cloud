// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/facade (interfaces: ApplicationFacade)

// Package facade is a generated GoMock package.
package facade

import (
	v1 "github.com/baetyl/baetyl-go/v2/spec/v1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplicationFacade is a mock of ApplicationFacade interface
type MockApplicationFacade struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationFacadeMockRecorder
}

// MockApplicationFacadeMockRecorder is the mock recorder for MockApplicationFacade
type MockApplicationFacadeMockRecorder struct {
	mock *MockApplicationFacade
}

// NewMockApplicationFacade creates a new mock instance
func NewMockApplicationFacade(ctrl *gomock.Controller) *MockApplicationFacade {
	mock := &MockApplicationFacade{ctrl: ctrl}
	mock.recorder = &MockApplicationFacadeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationFacade) EXPECT() *MockApplicationFacadeMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockApplicationFacade) Create(arg0 string, arg1, arg2 *v1.Application, arg3 []v1.Configuration) (*v1.Application, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockApplicationFacadeMockRecorder) Create(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockApplicationFacade)(nil).Create), arg0, arg1, arg2, arg3)
}

// Delete mocks base method
func (m *MockApplicationFacade) Delete(arg0, arg1 string, arg2 *v1.Application) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockApplicationFacadeMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockApplicationFacade)(nil).Delete), arg0, arg1, arg2)
}

// Update mocks base method
func (m *MockApplicationFacade) Update(arg0 string, arg1, arg2 *v1.Application, arg3 []v1.Configuration) (*v1.Application, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockApplicationFacadeMockRecorder) Update(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockApplicationFacade)(nil).Update), arg0, arg1, arg2, arg3)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/api (interfaces: ActiveAPI)

// Package api is a generated GoMock package.
package api

import (
	common "github.com/baetyl/baetyl-cloud/v2/common"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockActiveAPI is a mock of ActiveAPI interface
type MockActiveAPI struct {
	ctrl     *gomock.Controller
	recorder *MockActiveAPIMockRecorder
}

// MockActiveAPIMockRecorder is the mock recorder for MockActiveAPI
type MockActiveAPIMockRecorder struct {
	mock *MockActiveAPI
}

// NewMockActiveAPI creates a new mock instance
func NewMockActiveAPI(ctrl *gomock.Controller) *MockActiveAPI {
	mock := &MockActiveAPI{ctrl: ctrl}
	mock.recorder = &MockActiveAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockActiveAPI) EXPECT() *MockActiveAPIMockRecorder {
	return m.recorder
}

// GetResource mocks base method
func (m *MockActiveAPI) GetResource(arg0 *common.Context) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource
func (mr *MockActiveAPIMockRecorder) GetResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockActiveAPI)(nil).GetResource), arg0)
}

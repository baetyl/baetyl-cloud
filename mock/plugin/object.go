// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baetyl/baetyl-cloud/v2/plugin (interfaces: Object)

// Package plugin is a generated GoMock package.
package plugin

import (
	models "github.com/baetyl/baetyl-cloud/v2/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockObject is a mock of Object interface
type MockObject struct {
	ctrl     *gomock.Controller
	recorder *MockObjectMockRecorder
}

// MockObjectMockRecorder is the mock recorder for MockObject
type MockObjectMockRecorder struct {
	mock *MockObject
}

// NewMockObject creates a new mock instance
func NewMockObject(ctrl *gomock.Controller) *MockObject {
	mock := &MockObject{ctrl: ctrl}
	mock.recorder = &MockObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockObject) EXPECT() *MockObjectMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockObject) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockObjectMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockObject)(nil).Close))
}

// CreateExternalBucket mocks base method
func (m *MockObject) CreateExternalBucket(arg0 models.ExternalObjectInfo, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateExternalBucket", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateExternalBucket indicates an expected call of CreateExternalBucket
func (mr *MockObjectMockRecorder) CreateExternalBucket(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateExternalBucket", reflect.TypeOf((*MockObject)(nil).CreateExternalBucket), arg0, arg1, arg2)
}

// CreateInternalBucket mocks base method
func (m *MockObject) CreateInternalBucket(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInternalBucket", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInternalBucket indicates an expected call of CreateInternalBucket
func (mr *MockObjectMockRecorder) CreateInternalBucket(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInternalBucket", reflect.TypeOf((*MockObject)(nil).CreateInternalBucket), arg0, arg1, arg2)
}

// DeleteExternalObject mocks base method
func (m *MockObject) DeleteExternalObject(arg0 models.ExternalObjectInfo, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteExternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteExternalObject indicates an expected call of DeleteExternalObject
func (mr *MockObjectMockRecorder) DeleteExternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteExternalObject", reflect.TypeOf((*MockObject)(nil).DeleteExternalObject), arg0, arg1, arg2)
}

// DeleteInternalObject mocks base method
func (m *MockObject) DeleteInternalObject(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInternalObject indicates an expected call of DeleteInternalObject
func (mr *MockObjectMockRecorder) DeleteInternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInternalObject", reflect.TypeOf((*MockObject)(nil).DeleteInternalObject), arg0, arg1, arg2)
}

// GenExternalObjectURL mocks base method
func (m *MockObject) GenExternalObjectURL(arg0 models.ExternalObjectInfo, arg1, arg2 string) (*models.ObjectURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenExternalObjectURL", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ObjectURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenExternalObjectURL indicates an expected call of GenExternalObjectURL
func (mr *MockObjectMockRecorder) GenExternalObjectURL(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenExternalObjectURL", reflect.TypeOf((*MockObject)(nil).GenExternalObjectURL), arg0, arg1, arg2)
}

// GenInternalObjectURL mocks base method
func (m *MockObject) GenInternalObjectURL(arg0, arg1, arg2 string) (*models.ObjectURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenInternalObjectURL", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ObjectURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenInternalObjectURL indicates an expected call of GenInternalObjectURL
func (mr *MockObjectMockRecorder) GenInternalObjectURL(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenInternalObjectURL", reflect.TypeOf((*MockObject)(nil).GenInternalObjectURL), arg0, arg1, arg2)
}

// GetExternalObject mocks base method
func (m *MockObject) GetExternalObject(arg0 models.ExternalObjectInfo, arg1, arg2 string) (*models.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExternalObject indicates an expected call of GetExternalObject
func (mr *MockObjectMockRecorder) GetExternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExternalObject", reflect.TypeOf((*MockObject)(nil).GetExternalObject), arg0, arg1, arg2)
}

// GetInternalObject mocks base method
func (m *MockObject) GetInternalObject(arg0, arg1, arg2 string) (*models.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInternalObject indicates an expected call of GetInternalObject
func (mr *MockObjectMockRecorder) GetInternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInternalObject", reflect.TypeOf((*MockObject)(nil).GetInternalObject), arg0, arg1, arg2)
}

// HeadExternalBucket mocks base method
func (m *MockObject) HeadExternalBucket(arg0 models.ExternalObjectInfo, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HeadExternalBucket", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// HeadExternalBucket indicates an expected call of HeadExternalBucket
func (mr *MockObjectMockRecorder) HeadExternalBucket(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HeadExternalBucket", reflect.TypeOf((*MockObject)(nil).HeadExternalBucket), arg0, arg1)
}

// HeadExternalObject mocks base method
func (m *MockObject) HeadExternalObject(arg0 models.ExternalObjectInfo, arg1, arg2 string) (*models.ObjectMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HeadExternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ObjectMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HeadExternalObject indicates an expected call of HeadExternalObject
func (mr *MockObjectMockRecorder) HeadExternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HeadExternalObject", reflect.TypeOf((*MockObject)(nil).HeadExternalObject), arg0, arg1, arg2)
}

// HeadInternalBucket mocks base method
func (m *MockObject) HeadInternalBucket(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HeadInternalBucket", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// HeadInternalBucket indicates an expected call of HeadInternalBucket
func (mr *MockObjectMockRecorder) HeadInternalBucket(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HeadInternalBucket", reflect.TypeOf((*MockObject)(nil).HeadInternalBucket), arg0, arg1)
}

// HeadInternalObject mocks base method
func (m *MockObject) HeadInternalObject(arg0, arg1, arg2 string) (*models.ObjectMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HeadInternalObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ObjectMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HeadInternalObject indicates an expected call of HeadInternalObject
func (mr *MockObjectMockRecorder) HeadInternalObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HeadInternalObject", reflect.TypeOf((*MockObject)(nil).HeadInternalObject), arg0, arg1, arg2)
}

// IsAccountEnabled mocks base method
func (m *MockObject) IsAccountEnabled() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsAccountEnabled")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsAccountEnabled indicates an expected call of IsAccountEnabled
func (mr *MockObjectMockRecorder) IsAccountEnabled() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsAccountEnabled", reflect.TypeOf((*MockObject)(nil).IsAccountEnabled))
}

// ListExternalBucketObjects mocks base method
func (m *MockObject) ListExternalBucketObjects(arg0 models.ExternalObjectInfo, arg1 string, arg2 *models.ObjectParams) (*models.ListObjectsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListExternalBucketObjects", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ListObjectsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListExternalBucketObjects indicates an expected call of ListExternalBucketObjects
func (mr *MockObjectMockRecorder) ListExternalBucketObjects(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListExternalBucketObjects", reflect.TypeOf((*MockObject)(nil).ListExternalBucketObjects), arg0, arg1, arg2)
}

// ListExternalBuckets mocks base method
func (m *MockObject) ListExternalBuckets(arg0 models.ExternalObjectInfo) ([]models.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListExternalBuckets", arg0)
	ret0, _ := ret[0].([]models.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListExternalBuckets indicates an expected call of ListExternalBuckets
func (mr *MockObjectMockRecorder) ListExternalBuckets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListExternalBuckets", reflect.TypeOf((*MockObject)(nil).ListExternalBuckets), arg0)
}

// ListInternalBucketObjects mocks base method
func (m *MockObject) ListInternalBucketObjects(arg0, arg1 string, arg2 *models.ObjectParams) (*models.ListObjectsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInternalBucketObjects", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.ListObjectsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInternalBucketObjects indicates an expected call of ListInternalBucketObjects
func (mr *MockObjectMockRecorder) ListInternalBucketObjects(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInternalBucketObjects", reflect.TypeOf((*MockObject)(nil).ListInternalBucketObjects), arg0, arg1, arg2)
}

// ListInternalBuckets mocks base method
func (m *MockObject) ListInternalBuckets(arg0 string) ([]models.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInternalBuckets", arg0)
	ret0, _ := ret[0].([]models.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInternalBuckets indicates an expected call of ListInternalBuckets
func (mr *MockObjectMockRecorder) ListInternalBuckets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInternalBuckets", reflect.TypeOf((*MockObject)(nil).ListInternalBuckets), arg0)
}

// PutExternalObject mocks base method
func (m *MockObject) PutExternalObject(arg0 models.ExternalObjectInfo, arg1, arg2 string, arg3 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutExternalObject", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutExternalObject indicates an expected call of PutExternalObject
func (mr *MockObjectMockRecorder) PutExternalObject(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutExternalObject", reflect.TypeOf((*MockObject)(nil).PutExternalObject), arg0, arg1, arg2, arg3)
}

// PutExternalObjectFromFile mocks base method
func (m *MockObject) PutExternalObjectFromFile(arg0 models.ExternalObjectInfo, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutExternalObjectFromFile", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutExternalObjectFromFile indicates an expected call of PutExternalObjectFromFile
func (mr *MockObjectMockRecorder) PutExternalObjectFromFile(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutExternalObjectFromFile", reflect.TypeOf((*MockObject)(nil).PutExternalObjectFromFile), arg0, arg1, arg2, arg3)
}

// PutExternalObjectFromURL mocks base method
func (m *MockObject) PutExternalObjectFromURL(arg0 models.ExternalObjectInfo, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutExternalObjectFromURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutExternalObjectFromURL indicates an expected call of PutExternalObjectFromURL
func (mr *MockObjectMockRecorder) PutExternalObjectFromURL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutExternalObjectFromURL", reflect.TypeOf((*MockObject)(nil).PutExternalObjectFromURL), arg0, arg1, arg2, arg3)
}

// PutInternalObject mocks base method
func (m *MockObject) PutInternalObject(arg0, arg1, arg2 string, arg3 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutInternalObject", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutInternalObject indicates an expected call of PutInternalObject
func (mr *MockObjectMockRecorder) PutInternalObject(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutInternalObject", reflect.TypeOf((*MockObject)(nil).PutInternalObject), arg0, arg1, arg2, arg3)
}

// PutInternalObjectFromFile mocks base method
func (m *MockObject) PutInternalObjectFromFile(arg0, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutInternalObjectFromFile", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutInternalObjectFromFile indicates an expected call of PutInternalObjectFromFile
func (mr *MockObjectMockRecorder) PutInternalObjectFromFile(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutInternalObjectFromFile", reflect.TypeOf((*MockObject)(nil).PutInternalObjectFromFile), arg0, arg1, arg2, arg3)
}

// PutInternalObjectFromURL mocks base method
func (m *MockObject) PutInternalObjectFromURL(arg0, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutInternalObjectFromURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutInternalObjectFromURL indicates an expected call of PutInternalObjectFromURL
func (mr *MockObjectMockRecorder) PutInternalObjectFromURL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutInternalObjectFromURL", reflect.TypeOf((*MockObject)(nil).PutInternalObjectFromURL), arg0, arg1, arg2, arg3)
}

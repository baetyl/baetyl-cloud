// Code generated by MockGen. DO NOT EDIT.
// Source: ./plugin/cache.go

// Package plugin is a generated GoMock package.
package plugin

import (
	sql "database/sql"
	models "github.com/baetyl/baetyl-cloud/models"
	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
	reflect "reflect"
)

// MockCacheStorage is a mock of CacheStorage interface.
type MockCacheStorage struct {
	ctrl     *gomock.Controller
	recorder *MockCacheStorageMockRecorder
}

// MockCacheStorageMockRecorder is the mock recorder for MockCacheStorage.
type MockCacheStorageMockRecorder struct {
	mock *MockCacheStorage
}

// NewMockCacheStorage creates a new mock instance.
func NewMockCacheStorage(ctrl *gomock.Controller) *MockCacheStorage {
	mock := &MockCacheStorage{ctrl: ctrl}
	mock.recorder = &MockCacheStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheStorage) EXPECT() *MockCacheStorageMockRecorder {
	return m.recorder
}

// Transact mocks base method.
func (m *MockCacheStorage) Transact(arg0 func(*sqlx.Tx) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transact", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Transact indicates an expected call of Transact.
func (mr *MockCacheStorageMockRecorder) Transact(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transact", reflect.TypeOf((*MockCacheStorage)(nil).Transact), arg0)
}

// CreateSystemConfig mocks base method.
func (m *MockCacheStorage) CreateSystemConfig(sysConfig *models.SystemConfig) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSystemConfig", sysConfig)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSystemConfig indicates an expected call of CreateSystemConfig.
func (mr *MockCacheStorageMockRecorder) CreateSystemConfig(sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).CreateSystemConfig), sysConfig)
}

// DeleteSystemConfig mocks base method.
func (m *MockCacheStorage) DeleteSystemConfig(key string) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSystemConfig", key)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSystemConfig indicates an expected call of DeleteSystemConfig.
func (mr *MockCacheStorageMockRecorder) DeleteSystemConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).DeleteSystemConfig), key)
}

// GetSystemConfig mocks base method.
func (m *MockCacheStorage) GetSystemConfig(key string) (*models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemConfig", key)
	ret0, _ := ret[0].(*models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemConfig indicates an expected call of GetSystemConfig.
func (mr *MockCacheStorageMockRecorder) GetSystemConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).GetSystemConfig), key)
}

// ListSystemConfig mocks base method.
func (m *MockCacheStorage) ListSystemConfig(key string, page, size int) ([]models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSystemConfig", key, page, size)
	ret0, _ := ret[0].([]models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSystemConfig indicates an expected call of ListSystemConfig.
func (mr *MockCacheStorageMockRecorder) ListSystemConfig(key, page, size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).ListSystemConfig), key, page, size)
}

// CountSystemConfig mocks base method.
func (m *MockCacheStorage) CountSystemConfig(key string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountSystemConfig", key)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountSystemConfig indicates an expected call of CountSystemConfig.
func (mr *MockCacheStorageMockRecorder) CountSystemConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).CountSystemConfig), key)
}

// UpdateSystemConfig mocks base method.
func (m *MockCacheStorage) UpdateSystemConfig(sysConfig *models.SystemConfig) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemConfig", sysConfig)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSystemConfig indicates an expected call of UpdateSystemConfig.
func (mr *MockCacheStorageMockRecorder) UpdateSystemConfig(sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemConfig", reflect.TypeOf((*MockCacheStorage)(nil).UpdateSystemConfig), sysConfig)
}

// CreateSystemConfigTx mocks base method.
func (m *MockCacheStorage) CreateSystemConfigTx(tx *sqlx.Tx, sysConfig *models.SystemConfig) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSystemConfigTx", tx, sysConfig)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSystemConfigTx indicates an expected call of CreateSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) CreateSystemConfigTx(tx, sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).CreateSystemConfigTx), tx, sysConfig)
}

// DeleteSystemConfigTx mocks base method.
func (m *MockCacheStorage) DeleteSystemConfigTx(tx *sqlx.Tx, key string) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSystemConfigTx", tx, key)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSystemConfigTx indicates an expected call of DeleteSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) DeleteSystemConfigTx(tx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).DeleteSystemConfigTx), tx, key)
}

// GetSystemConfigTx mocks base method.
func (m *MockCacheStorage) GetSystemConfigTx(tx *sqlx.Tx, key string) (*models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemConfigTx", tx, key)
	ret0, _ := ret[0].(*models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemConfigTx indicates an expected call of GetSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) GetSystemConfigTx(tx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).GetSystemConfigTx), tx, key)
}

// ListSystemConfigTx mocks base method.
func (m *MockCacheStorage) ListSystemConfigTx(tx *sqlx.Tx, key string, page, size int) ([]models.SystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSystemConfigTx", tx, key, page, size)
	ret0, _ := ret[0].([]models.SystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSystemConfigTx indicates an expected call of ListSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) ListSystemConfigTx(tx, key, page, size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).ListSystemConfigTx), tx, key, page, size)
}

// CountSystemConfigTx mocks base method.
func (m *MockCacheStorage) CountSystemConfigTx(tx *sqlx.Tx, key string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountSystemConfigTx", tx, key)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountSystemConfigTx indicates an expected call of CountSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) CountSystemConfigTx(tx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).CountSystemConfigTx), tx, key)
}

// UpdateSystemConfigTx mocks base method.
func (m *MockCacheStorage) UpdateSystemConfigTx(tx *sqlx.Tx, sysConfig *models.SystemConfig) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemConfigTx", tx, sysConfig)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSystemConfigTx indicates an expected call of UpdateSystemConfigTx.
func (mr *MockCacheStorageMockRecorder) UpdateSystemConfigTx(tx, sysConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemConfigTx", reflect.TypeOf((*MockCacheStorage)(nil).UpdateSystemConfigTx), tx, sysConfig)
}

// Close mocks base method.
func (m *MockCacheStorage) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockCacheStorageMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockCacheStorage)(nil).Close))
}
